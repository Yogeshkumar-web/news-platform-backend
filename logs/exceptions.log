{"date":"Mon Sep 22 2025 00:25:52 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                         ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                        ~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                         ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                        ~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":52156.484},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4895400,"external":7971806,"heapTotal":221216768,"heapUsed":191966960,"rss":276881408},"pid":16136,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                         ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                        ~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-21T18:55:52.273Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Mon Sep 22 2025 00:38:25 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                         ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                        ~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                         ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                        ~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":52909.796},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4895328,"external":7971734,"heapTotal":229289984,"heapUsed":204135040,"rss":286035968},"pid":7368,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                         ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; } | { ...; } | { ...; } | { ...; } | { ...; }' is not assignable to parameter of type 'string'.\r\n  Type '{ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; }' is not assignable to type 'string'.\r\n\r\n\u001b[7m56\u001b[0m       for (const t of a.tags) counts.set(t, (counts.get(t) || 0) + 1);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                        ~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-21T19:08:25.571Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:00:06 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":32846.359},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886535,"external":7962941,"heapTotal":227774464,"heapUsed":200184992,"rss":287465472},"pid":8148,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:30:06.633Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:01:11 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":32911.171},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886759,"external":7963165,"heapTotal":226725888,"heapUsed":200043560,"rss":281178112},"pid":10632,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:31:11.446Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:03:55 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33075.328},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886695,"external":7963101,"heapTotal":226463744,"heapUsed":199816088,"rss":283402240},"pid":13832,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:33:55.603Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:04:07 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33087.515},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886607,"external":7963013,"heapTotal":233017344,"heapUsed":203711632,"rss":288813056},"pid":17128,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:34:07.790Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:04:16 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33096.14},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886671,"external":7963077,"heapTotal":226988032,"heapUsed":200181968,"rss":283787264},"pid":6296,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:34:16.407Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:05:01 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33141.703},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886799,"external":7963205,"heapTotal":227512320,"heapUsed":199637288,"rss":283103232},"pid":14984,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m23\u001b[0m             cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:35:01.977Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:05:48 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33188.125},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886735,"external":7968802,"heapTotal":230133760,"heapUsed":196961352,"rss":283598848},"pid":6492,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:35:48.402Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:06:27 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2551,2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33227.406},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886663,"external":7968730,"heapTotal":231649280,"heapUsed":202166504,"rss":288452608},"pid":19300,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:36:27.675Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:08:05 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2305]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33325.656},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878551,"external":7967294,"heapTotal":215429120,"heapUsed":189055720,"rss":272412672},"pid":11564,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:38:05.930Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:10:34 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2305]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33474.343},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878519,"external":7954925,"heapTotal":219885568,"heapUsed":189126712,"rss":275726336},"pid":6276,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:40:34.623Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:10:51 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2551,2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33490.89},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886695,"external":7968762,"heapTotal":231124992,"heapUsed":202116984,"rss":288473088},"pid":16572,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:40:51.148Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:11:23 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2740]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/middleware/authMiddleware.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2740: \u001b[0mType 'AuthTokenPayload' is missing the following properties from type '{ name: string; id: string; email: string; hashedPass: string; role: UserRole; profileImage: string | null; bio: string | null; isSuspended: boolean; createdAt: Date; updatedAt: Date; }': hashedPass, profileImage, bio, isSuspended, and 2 more.\r\n\r\n\u001b[7m47\u001b[0m         req.user = payload;\r\n\u001b[7m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/middleware/authMiddleware.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2740: \u001b[0mType 'AuthTokenPayload' is missing the following properties from type '{ name: string; id: string; email: string; hashedPass: string; role: UserRole; profileImage: string | null; bio: string | null; isSuspended: boolean; createdAt: Date; updatedAt: Date; }': hashedPass, profileImage, bio, isSuspended, and 2 more.\r\n\r\n\u001b[7m47\u001b[0m         req.user = payload;\r\n\u001b[7m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33523.609},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886695,"external":7992222,"heapTotal":222007296,"heapUsed":191116760,"rss":278523904},"pid":17004,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/middleware/authMiddleware.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2740: \u001b[0mType 'AuthTokenPayload' is missing the following properties from type '{ name: string; id: string; email: string; hashedPass: string; role: UserRole; profileImage: string | null; bio: string | null; isSuspended: boolean; createdAt: Date; updatedAt: Date; }': hashedPass, profileImage, bio, isSuspended, and 2 more.\r\n\r\n\u001b[7m47\u001b[0m         req.user = payload;\r\n\u001b[7m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:41:23.877Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:12:43 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2551,2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33602.937},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886615,"external":7968682,"heapTotal":237416448,"heapUsed":203441480,"rss":290967552},"pid":19336,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:42:43.221Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:13:19 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2551,2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33638.89},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886663,"external":7968730,"heapTotal":238202880,"heapUsed":203032712,"rss":295292928},"pid":18920,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:43:19.164Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:13:49 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2551,2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33668.89},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886711,"external":7968778,"heapTotal":236892160,"heapUsed":214342464,"rss":294572032},"pid":7004,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:43:49.169Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:13:52 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2551,2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33672.656},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886711,"external":7968778,"heapTotal":230338560,"heapUsed":202584984,"rss":283189248},"pid":13704,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:43:52.930Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:14:04 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2551,2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33684.156},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886687,"external":7968754,"heapTotal":230862848,"heapUsed":202085824,"rss":287854592},"pid":15196,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:44:04.433Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:14:50 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,2551,2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33730.406},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886631,"external":7968698,"heapTotal":236630016,"heapUsed":202413200,"rss":290816000},"pid":13280,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m52\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m67\u001b[0m         const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m78\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m  \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m79\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m  \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m90\u001b[0m         const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m106\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m107\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m118\u001b[0m         await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m129\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m130\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m141\u001b[0m         const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m155\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m45\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m165\u001b[0m         const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                            ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m551\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m551\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m183\u001b[0m         const userId = req.user?.id;\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m184\u001b[0m         const userRole = req.user?.role;\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m195\u001b[0m         const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m212\u001b[0m         const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:44:50.679Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:16:08 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2305]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33808.734},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886687,"external":7963093,"heapTotal":218312704,"heapUsed":186830672,"rss":274604032},"pid":5616,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:46:08.999Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:16:23 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2305]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33823.218},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886679,"external":7979567,"heapTotal":211496960,"heapUsed":188876752,"rss":267755520},"pid":10560,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:46:23.484Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:16:39 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2305]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33839.406},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886655,"external":7971253,"heapTotal":220147712,"heapUsed":192229216,"rss":276303872},"pid":18436,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:46:39.674Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:16:53 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2305]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33853.296},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886751,"external":7971349,"heapTotal":219361280,"heapUsed":193793168,"rss":275996672},"pid":20252,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:46:53.557Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:18:13 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2305]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33933.218},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886807,"external":7971405,"heapTotal":218836992,"heapUsed":192657200,"rss":275079168},"pid":3752,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../types\"' has no exported member 'AuthenticatedRequest'.\r\n\r\n\u001b[7m5\u001b[0m import { AuthenticatedRequest } from \"../types\";\r\n\u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:48:13.501Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:18:24 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2304]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'AuthenticatedRequest'.\r\n\r\n\u001b[7m64\u001b[0m             req: AuthenticatedRequest,\r\n\u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'AuthenticatedRequest'.\r\n\r\n\u001b[7m64\u001b[0m             req: AuthenticatedRequest,\r\n\u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33944.234},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886767,"external":7971365,"heapTotal":218574848,"heapUsed":194322688,"rss":273797120},"pid":19236,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'AuthenticatedRequest'.\r\n\r\n\u001b[7m64\u001b[0m             req: AuthenticatedRequest,\r\n\u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:48:24.515Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:18:32 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33952.359},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886759,"external":7971357,"heapTotal":218836992,"heapUsed":191500504,"rss":275746816},"pid":16444,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:48:32.644Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:19:16 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":33996.546},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886663,"external":7971261,"heapTotal":218574848,"heapUsed":191864352,"rss":278102016},"pid":14968,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:49:16.816Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:19:46 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":34025.937},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886655,"external":7971253,"heapTotal":218574848,"heapUsed":192244992,"rss":275255296},"pid":1652,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:49:46.205Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:21:15 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":34115.468},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878503,"external":7954909,"heapTotal":218312704,"heapUsed":191975376,"rss":277106688},"pid":10560,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:51:15.735Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:21:34 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":34133.781},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878447,"external":7971335,"heapTotal":212021248,"heapUsed":190231032,"rss":271831040},"pid":9564,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:51:34.049Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:22:17 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":34177.5},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878399,"external":7954805,"heapTotal":219361280,"heapUsed":192347880,"rss":274690048},"pid":17464,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:52:17.756Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:22:42 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":34201.828},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878447,"external":7954853,"heapTotal":218312704,"heapUsed":191950808,"rss":276074496},"pid":15552,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:52:42.103Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:23:50 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":34269.75},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878511,"external":7954917,"heapTotal":216215552,"heapUsed":180100056,"rss":272617472},"pid":17428,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T16:53:50.023Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:30:57 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":34697.453},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878471,"external":7954877,"heapTotal":218574848,"heapUsed":192024952,"rss":280453120},"pid":15216,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:00:57.722Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:31:07 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":34707.218},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878575,"external":7954981,"heapTotal":222769152,"heapUsed":191900976,"rss":278540288},"pid":14640,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:01:07.494Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:31:30 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":34730.25},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878495,"external":7954901,"heapTotal":218312704,"heapUsed":192205328,"rss":273248256},"pid":19076,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:01:30.512Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:36:26 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35026.546},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878383,"external":7954789,"heapTotal":218836992,"heapUsed":191699488,"rss":273883136},"pid":4844,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:06:26.824Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:39:08 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35188.078},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878447,"external":7954853,"heapTotal":219099136,"heapUsed":192334904,"rss":270581760},"pid":19904,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:09:08.357Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:39:25 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35205.734},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878479,"external":7954885,"heapTotal":218574848,"heapUsed":191966672,"rss":269946880},"pid":18836,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:09:25.993Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:39:45 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35225.578},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878511,"external":7954917,"heapTotal":218574848,"heapUsed":190519288,"rss":269787136},"pid":7008,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:09:45.842Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:39:50 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35230.125},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878607,"external":7955013,"heapTotal":222244864,"heapUsed":194832936,"rss":274272256},"pid":14492,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:09:50.402Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:39:58 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35238.609},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878511,"external":7954917,"heapTotal":219099136,"heapUsed":192461696,"rss":271470592},"pid":16784,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:09:58.883Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:40:58 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35298.218},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878447,"external":7954853,"heapTotal":219623424,"heapUsed":193311024,"rss":271511552},"pid":15816,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m64\u001b[0m             if (!req.user?.id) {\r\n\u001b[7m  \u001b[0m \u001b[91m                     ~~~~\u001b[0m\r\n\u001b[96msrc/controllers/AuthController.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'user' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n\r\n\u001b[7m73\u001b[0m             const user = await this.authService.getProfile(req.user.id);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                               ~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:10:58.480Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:41:21 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35321.078},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878599,"external":7955005,"heapTotal":218050560,"heapUsed":185889984,"rss":271298560},"pid":14740,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:11:21.351Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:43:27 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35447.359},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878607,"external":7971495,"heapTotal":211759104,"heapUsed":185063360,"rss":265232384},"pid":16016,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:13:27.618Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:43:44 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35463.875},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878471,"external":7954877,"heapTotal":218574848,"heapUsed":183626816,"rss":270913536},"pid":2512,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:13:44.145Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:44:19 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35499.312},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878519,"external":7954925,"heapTotal":218050560,"heapUsed":186051912,"rss":271683584},"pid":8588,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:14:19.586Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:46:19 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35618.875},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886759,"external":7971357,"heapTotal":218836992,"heapUsed":186197608,"rss":270868480},"pid":15948,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:16:19.151Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:46:31 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35631.562},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886735,"external":7975478,"heapTotal":214642688,"heapUsed":184788720,"rss":266747904},"pid":15388,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:16:31.834Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:47:08 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35668.359},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886831,"external":7971429,"heapTotal":218836992,"heapUsed":186617360,"rss":270544896},"pid":9440,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:17:08.631Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:47:19 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35679.546},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886791,"external":7975534,"heapTotal":214642688,"heapUsed":184888744,"rss":266768384},"pid":13812,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:17:19.818Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:47:59 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35719.453},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886719,"external":7979607,"heapTotal":211759104,"heapUsed":184810176,"rss":266313728},"pid":8204,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:17:59.729Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:48:14 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35733.89},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886727,"external":7979615,"heapTotal":211234816,"heapUsed":184590512,"rss":263299072},"pid":13004,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:18:14.158Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:48:46 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35766.406},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886623,"external":7971221,"heapTotal":218836992,"heapUsed":186811008,"rss":272347136},"pid":16488,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:18:46.677Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:49:11 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35791.484},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886527,"external":7971125,"heapTotal":218312704,"heapUsed":186452704,"rss":268333056},"pid":2536,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:19:11.745Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Fri Sep 26 2025 22:49:31 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2769]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":35811.046},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886575,"external":7971173,"heapTotal":218836992,"heapUsed":185170384,"rss":271364096},"pid":3256,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/authRoute.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\r\n  The last overload gave the following error.\r\n    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<Response<ApiResponse<null>, Record<string, any>> | undefined>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\r\n        Types of parameters 'req' and 'req' are incompatible.\r\n          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is missing the following properties from type 'AuthenticatedRequest': cache, credentials, destination, integrity, and 15 more.\r\n\r\n\u001b[7m37\u001b[0m router.get(\"/me\", authenticateToken, authController.getProfile);\r\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m153\u001b[0m     <\r\n    \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\r\n    \u001b[7m154\u001b[0m         P = ParamsDictionary,\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m...\u001b[0m \r\n    \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n    \u001b[7m163\u001b[0m     ): T;\r\n    \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\r\n    The last overload is declared here.\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T17:19:31.316Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 05:17:58 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m50\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m50\u001b[0m     commentsController.updateComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m58\u001b[0m     commentsController.deleteComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserComments' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m66\u001b[0m     commentsController.getUserComments\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m77\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'markAsSpam' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m77\u001b[0m     commentsController.markAsSpam\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m50\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m50\u001b[0m     commentsController.updateComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m58\u001b[0m     commentsController.deleteComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserComments' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m66\u001b[0m     commentsController.getUserComments\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m77\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'markAsSpam' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m77\u001b[0m     commentsController.markAsSpam\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":59118.343},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878319,"external":7961289,"heapTotal":231911424,"heapUsed":207495208,"rss":284889088},"pid":11764,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m50\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m50\u001b[0m     commentsController.updateComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m58\u001b[0m     commentsController.deleteComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserComments' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m66\u001b[0m     commentsController.getUserComments\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m77\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'markAsSpam' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m77\u001b[0m     commentsController.markAsSpam\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T23:47:58.610Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 05:20:10 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m50\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m50\u001b[0m     commentsController.updateComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m58\u001b[0m     commentsController.deleteComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserComments' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m66\u001b[0m     commentsController.getUserComments\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m77\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'markAsSpam' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m77\u001b[0m     commentsController.markAsSpam\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m50\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m50\u001b[0m     commentsController.updateComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m58\u001b[0m     commentsController.deleteComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserComments' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m66\u001b[0m     commentsController.getUserComments\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m77\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'markAsSpam' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m77\u001b[0m     commentsController.markAsSpam\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":59250.046},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878455,"external":7961425,"heapTotal":232173568,"heapUsed":207574800,"rss":281505792},"pid":1880,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m50\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m50\u001b[0m     commentsController.updateComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteComment' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m58\u001b[0m     commentsController.deleteComment\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserComments' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m66\u001b[0m     commentsController.getUserComments\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/routes/commentsRoute.ts\u001b[0m:\u001b[93m77\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'markAsSpam' does not exist on type 'CommentsController'.\r\n\r\n\u001b[7m77\u001b[0m     commentsController.markAsSpam\r\n\u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-26T23:50:10.326Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:26:29 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2551,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m63\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m63\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":2231.296},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878399,"external":7976505,"heapTotal":211701760,"heapUsed":187159128,"rss":261173248},"pid":16276,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m63\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T04:56:29.566Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:28:47 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2551,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m63\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m63\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":2369.453},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878495,"external":7960119,"heapTotal":220352512,"heapUsed":184788704,"rss":268738560},"pid":16356,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m63\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T04:58:47.711Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:31:55 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2551,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m81\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m81\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m81\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m81\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":2557.453},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4883825,"external":7960231,"heapTotal":215953408,"heapUsed":194549776,"rss":262090752},"pid":9256,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m81\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m81\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:01:55.722Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:33:01 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2551,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m86\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m86\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m86\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m86\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":2623.515},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878567,"external":7976673,"heapTotal":211963904,"heapUsed":188207512,"rss":261386240},"pid":9552,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m86\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m86\u001b[0m     async getArticles(query: {\r\n    \u001b[7m  \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:03:01.780Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:37:13 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2551,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m112\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m112\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m112\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m112\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":2875.187},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878463,"external":7976569,"heapTotal":211963904,"heapUsed":188277776,"rss":261234688},"pid":3344,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'createArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m68\u001b[0m             const article = await articleService.createArticle(articleData);\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m92\u001b[0m             const article = await articleService.updateArticle(\r\n\u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deleteArticle' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m121\u001b[0m             await articleService.deleteArticle(id, userId, userRole);\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getArticleForEdit' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m146\u001b[0m             const article = await articleService.getArticleForEdit(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getMyArticles' does not exist on type 'ArticleService'. Did you mean 'getArticles'?\r\n\r\n\u001b[7m172\u001b[0m             const result = await articleService.getMyArticles(userId, {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m112\u001b[0m:\u001b[93m11\u001b[0m\r\n    \u001b[7m112\u001b[0m     async getArticles(query: {\r\n    \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~\u001b[0m\r\n    'getArticles' is declared here.\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toggleArticleStatus' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m204\u001b[0m             const article = await articleService.toggleArticleStatus(\r\n\u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'uploadImage' does not exist on type 'ArticleService'.\r\n\r\n\u001b[7m223\u001b[0m             const imageUrl = await articleService.uploadImage(req.file);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:07:13.468Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:40:52 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,7006,2339,2339]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m179\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'create' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m179\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m183\u001b[0m             await this.repo.updateCategories(\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m204\u001b[0m         const existingArticle = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m258\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m258\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m266\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m266\u001b[0m             await this.repo.updateCategories(articleId, updateData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m284\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'delete' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m301\u001b[0m         await this.repo.delete(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m312\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m312\u001b[0m         const article = await this.repo.findById(articleId, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m345\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'count' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m345\u001b[0m             this.repo.count(where),\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m346\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findMany' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m346\u001b[0m             this.repo.findMany({\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m355\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m355\u001b[0m         const articles = articlesRaw.map((a) =>\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m372\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m372\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m399\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m179\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'create' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m179\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m183\u001b[0m             await this.repo.updateCategories(\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m204\u001b[0m         const existingArticle = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m258\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m258\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m266\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m266\u001b[0m             await this.repo.updateCategories(articleId, updateData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m284\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'delete' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m301\u001b[0m         await this.repo.delete(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m312\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m312\u001b[0m         const article = await this.repo.findById(articleId, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m345\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'count' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m345\u001b[0m             this.repo.count(where),\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m346\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findMany' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m346\u001b[0m             this.repo.findMany({\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m355\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m355\u001b[0m         const articles = articlesRaw.map((a) =>\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m372\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m372\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m399\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":3094.687},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878487,"external":7967743,"heapTotal":216158208,"heapUsed":191015168,"rss":265097216},"pid":11156,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m179\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'create' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m179\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m183\u001b[0m             await this.repo.updateCategories(\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m204\u001b[0m         const existingArticle = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m258\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m258\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m266\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m266\u001b[0m             await this.repo.updateCategories(articleId, updateData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m284\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'delete' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m301\u001b[0m         await this.repo.delete(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m312\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m312\u001b[0m         const article = await this.repo.findById(articleId, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m345\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'count' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m345\u001b[0m             this.repo.count(where),\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m346\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findMany' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m346\u001b[0m             this.repo.findMany({\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m355\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m355\u001b[0m         const articles = articlesRaw.map((a) =>\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m372\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m372\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m399\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:10:52.958Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:43:36 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,7006,2339,2339,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'create' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m184\u001b[0m             await this.repo.updateCategories(\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m205\u001b[0m         const existingArticle = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m259\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m259\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m267\u001b[0m             await this.repo.updateCategories(articleId, updateData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m285\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m302\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'delete' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m302\u001b[0m         await this.repo.delete(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m313\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m313\u001b[0m         const article = await this.repo.findById(articleId, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m346\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'count' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m346\u001b[0m             this.repo.count(where),\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m347\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findMany' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m347\u001b[0m             this.repo.findMany({\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m356\u001b[0m         const articles = articlesRaw.map((a) =>\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m373\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m373\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m400\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m400\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'create' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m184\u001b[0m             await this.repo.updateCategories(\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m205\u001b[0m         const existingArticle = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m259\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m259\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m267\u001b[0m             await this.repo.updateCategories(articleId, updateData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m285\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m302\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'delete' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m302\u001b[0m         await this.repo.delete(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m313\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m313\u001b[0m         const article = await this.repo.findById(articleId, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m346\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'count' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m346\u001b[0m             this.repo.count(where),\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m347\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findMany' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m347\u001b[0m             this.repo.findMany({\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m356\u001b[0m         const articles = articlesRaw.map((a) =>\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m373\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m373\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m400\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m400\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":3258.484},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878559,"external":7967815,"heapTotal":216682496,"heapUsed":193837728,"rss":267419648},"pid":6984,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'create' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m184\u001b[0m             await this.repo.updateCategories(\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m205\u001b[0m         const existingArticle = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m259\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m259\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m267\u001b[0m             await this.repo.updateCategories(articleId, updateData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m285\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m302\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'delete' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m302\u001b[0m         await this.repo.delete(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m313\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m313\u001b[0m         const article = await this.repo.findById(articleId, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m346\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'count' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m346\u001b[0m             this.repo.count(where),\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m347\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findMany' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m347\u001b[0m             this.repo.findMany({\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m356\u001b[0m         const articles = articlesRaw.map((a) =>\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m373\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m373\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m400\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m400\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:13:36.770Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:46:09 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2339,2339,2339,2339,2339,2339,2339,2339,2339,2339,7006,2339,2339,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'create' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m184\u001b[0m             await this.repo.updateCategories(\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m205\u001b[0m         const existingArticle = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m259\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m259\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m267\u001b[0m             await this.repo.updateCategories(articleId, updateData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m285\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m302\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'delete' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m302\u001b[0m         await this.repo.delete(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m313\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m313\u001b[0m         const article = await this.repo.findById(articleId, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m346\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'count' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m346\u001b[0m             this.repo.count(where),\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m347\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findMany' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m347\u001b[0m             this.repo.findMany({\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m356\u001b[0m         const articles = articlesRaw.map((a) =>\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m373\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m373\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m400\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m400\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'create' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m184\u001b[0m             await this.repo.updateCategories(\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m205\u001b[0m         const existingArticle = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m259\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m259\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m267\u001b[0m             await this.repo.updateCategories(articleId, updateData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m285\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m302\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'delete' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m302\u001b[0m         await this.repo.delete(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m313\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m313\u001b[0m         const article = await this.repo.findById(articleId, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m346\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'count' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m346\u001b[0m             this.repo.count(where),\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m347\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findMany' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m347\u001b[0m             this.repo.findMany({\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m356\u001b[0m         const articles = articlesRaw.map((a) =>\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m373\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m373\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m400\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m400\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":3410.796},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4878567,"external":7967823,"heapTotal":216944640,"heapUsed":193812568,"rss":265281536},"pid":6876,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'create' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m184\u001b[0m             await this.repo.updateCategories(\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m205\u001b[0m         const existingArticle = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m259\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m259\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'updateCategories' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m267\u001b[0m             await this.repo.updateCategories(articleId, updateData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m285\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m302\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'delete' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m302\u001b[0m         await this.repo.delete(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m313\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m313\u001b[0m         const article = await this.repo.findById(articleId, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m346\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'count' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m346\u001b[0m             this.repo.count(where),\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m347\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findMany' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m347\u001b[0m             this.repo.findMany({\r\n\u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m356\u001b[0m         const articles = articlesRaw.map((a) =>\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m373\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'findById' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m373\u001b[0m         const article = await this.repo.findById(articleId);\r\n\u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m400\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'update' does not exist on type 'ArticleRepository'.\r\n\r\n\u001b[7m400\u001b[0m         const updatedArticle = await this.repo.update(\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:16:09.062Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:47:11 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":3473.656},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886831,"external":7976087,"heapTotal":215633920,"heapUsed":186693200,"rss":266944512},"pid":5568,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:17:11.921Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:51:02 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":3704.265},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886703,"external":7975959,"heapTotal":225071104,"heapUsed":199101992,"rss":273010688},"pid":8760,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:21:02.537Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:55:41 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":3983.468},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886527,"external":7975783,"heapTotal":215633920,"heapUsed":187366320,"rss":263520256},"pid":8840,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:25:41.732Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:56:25 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":4027.64},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886631,"external":7975887,"heapTotal":219041792,"heapUsed":187160352,"rss":267202560},"pid":6692,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:26:25.916Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:56:30 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":4032.203},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886703,"external":7975959,"heapTotal":224284672,"heapUsed":200105928,"rss":272175104},"pid":5112,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:26:30.469Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:56:50 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":4051.796},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886703,"external":7975959,"heapTotal":224284672,"heapUsed":199877904,"rss":272510976},"pid":7680,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:26:50.069Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:56:56 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":4057.812},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886663,"external":7975919,"heapTotal":215633920,"heapUsed":187624104,"rss":263315456},"pid":14044,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:26:56.089Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:58:49 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":4171.703},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886831,"external":7976087,"heapTotal":215633920,"heapUsed":190528024,"rss":263778304},"pid":4160,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:28:49.969Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:59:00 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":4182.656},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886807,"external":7976063,"heapTotal":215633920,"heapUsed":189577928,"rss":261718016},"pid":16644,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:29:00.924Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 10:59:55 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m51\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m51\u001b[0m         cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m51\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m51\u001b[0m         cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":4237.39},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886679,"external":7963085,"heapTotal":218836992,"heapUsed":195199448,"rss":267710464},"pid":15004,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/routes/articlesRoute.ts\u001b[0m:\u001b[93m51\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'null'.\r\n\r\n\u001b[7m51\u001b[0m         cb(new Error(\"Only image files are allowed\"), false);\r\n\u001b[7m  \u001b[0m \u001b[91m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:29:55.673Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 11:00:55 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":4297.234},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886815,"external":7976071,"heapTotal":225333248,"heapUsed":191185616,"rss":277299200},"pid":7408,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T05:30:55.505Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 11:44:58 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2367,2345,2352,2694,2352,2352,2352,2694,2352,2352,2352,2352,2304,2695,2304,2451,2304,2451,2451,2451,2532,2532,18004,2304,2451,7006,2532,2304,2304,2304,2693,2304,2532,2304,2532,7006,2532,2304,2695,2304,2451,2304,2451,2451,2451,2532,2532,18004,2304,2451,7006,2532,2304,2304,2304,2693,2304,2532,2304,2532,7006,2532,1128,1434,1005,1005,1128,1128,1434,1005,1005,1128]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m132\u001b[0m       if (!existing || (existingId && existing.id === existingId)) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m188\u001b[0m       await this.repo.updateCategories(article.id, articleData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m196\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m240\u001b[0m:\u001b[93m84\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m240\u001b[0m     if (updateData.status !== undefined) data.status = updateData.status as Prisma.ArticleStatus;\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                                   ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m257\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m257\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m297\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m320\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m320\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as EditArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m356\u001b[0m       { status: status as Prisma.ArticleStatus },\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m367\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m407\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m407\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m447\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m447\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m476\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m485\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m485\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m491\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m491\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m492\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m492\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m494\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m494\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m495\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m495\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m509\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m509\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m525\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m525\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m527\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m527\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m529\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m529\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m538\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m538\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m544\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m544\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m545\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m547\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m547\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m548\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m548\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m562\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m562\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m571\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m571\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m573\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m573\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m575\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m575\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m506\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m506\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m559\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m559\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m577\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m577\u001b[0m }\r\n\u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m132\u001b[0m       if (!existing || (existingId && existing.id === existingId)) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m188\u001b[0m       await this.repo.updateCategories(article.id, articleData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m196\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m240\u001b[0m:\u001b[93m84\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m240\u001b[0m     if (updateData.status !== undefined) data.status = updateData.status as Prisma.ArticleStatus;\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                                   ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m257\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m257\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m297\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m320\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m320\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as EditArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m356\u001b[0m       { status: status as Prisma.ArticleStatus },\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m367\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m407\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m407\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m447\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m447\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m476\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m485\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m485\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m491\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m491\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m492\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m492\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m494\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m494\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m495\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m495\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m509\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m509\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m525\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m525\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m527\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m527\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m529\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m529\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m538\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m538\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m544\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m544\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m545\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m547\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m547\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m548\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m548\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m562\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m562\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m571\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m571\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m573\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m573\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m575\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m575\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m506\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m506\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m559\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m559\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m577\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m577\u001b[0m }\r\n\u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":6940.609},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886695,"external":7975951,"heapTotal":226119680,"heapUsed":194427856,"rss":275824640},"pid":2264,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m132\u001b[0m       if (!existing || (existingId && existing.id === existingId)) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m188\u001b[0m       await this.repo.updateCategories(article.id, articleData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m196\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m240\u001b[0m:\u001b[93m84\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m240\u001b[0m     if (updateData.status !== undefined) data.status = updateData.status as Prisma.ArticleStatus;\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                                   ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m257\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m257\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m297\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m320\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m320\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as EditArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m356\u001b[0m       { status: status as Prisma.ArticleStatus },\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m367\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m407\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m407\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m447\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m447\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m476\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m485\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m485\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m491\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m491\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m492\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m492\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m494\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m494\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m495\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m495\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m509\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m509\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m525\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m525\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m527\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m527\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m529\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m529\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m538\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m538\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m544\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m544\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m545\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m547\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m547\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m548\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m548\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m562\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m562\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m571\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m571\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m573\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m573\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m575\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m575\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m506\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m506\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m559\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m559\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m577\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m577\u001b[0m }\r\n\u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:14:58.883Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 11:45:55 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2367,2345,2352,2694,2352,2352,2352,2694,2352,2352,2352,2352,2304,2695,2304,2451,2304,2451,2451,2451,2532,2532,18004,2304,2451,7006,2532,2304,2304,2304,2693,2304,2532,2304,2532,7006,2532,2304,2695,2304,2451,2304,2451,2451,2451,2532,2532,18004,2304,2451,7006,2532,2304,2304,2304,2693,2304,2532,2304,2532,7006,2532,1128,1434,1005,1005,1128,1128,1434,1005,1005]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m132\u001b[0m       if (!existing || (existingId && existing.id === existingId)) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m188\u001b[0m       await this.repo.updateCategories(article.id, articleData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m196\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m240\u001b[0m:\u001b[93m84\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m240\u001b[0m     if (updateData.status !== undefined) data.status = updateData.status as Prisma.ArticleStatus;\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                                   ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m257\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m257\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m297\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m320\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m320\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as EditArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m356\u001b[0m       { status: status as Prisma.ArticleStatus },\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m367\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m407\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m407\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m447\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m447\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m476\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m485\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m485\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m491\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m491\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m492\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m492\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m494\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m494\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m495\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m495\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m509\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m509\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m525\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m525\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m527\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m527\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m529\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m529\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m538\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m538\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m544\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m544\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m545\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m547\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m547\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m548\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m548\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m562\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m562\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m571\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m571\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m573\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m573\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m575\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m575\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m506\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m506\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m559\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m559\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m132\u001b[0m       if (!existing || (existingId && existing.id === existingId)) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m188\u001b[0m       await this.repo.updateCategories(article.id, articleData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m196\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m240\u001b[0m:\u001b[93m84\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m240\u001b[0m     if (updateData.status !== undefined) data.status = updateData.status as Prisma.ArticleStatus;\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                                   ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m257\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m257\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m297\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m320\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m320\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as EditArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m356\u001b[0m       { status: status as Prisma.ArticleStatus },\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m367\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m407\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m407\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m447\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m447\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m476\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m485\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m485\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m491\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m491\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m492\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m492\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m494\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m494\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m495\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m495\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m509\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m509\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m525\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m525\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m527\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m527\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m529\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m529\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m538\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m538\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m544\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m544\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m545\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m547\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m547\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m548\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m548\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m562\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m562\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m571\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m571\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m573\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m573\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m575\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m575\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m506\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m506\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m559\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m559\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":6996.875},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886647,"external":7975903,"heapTotal":225857536,"heapUsed":194321928,"rss":276381696},"pid":6980,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m132\u001b[0m       if (!existing || (existingId && existing.id === existingId)) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m188\u001b[0m       await this.repo.updateCategories(article.id, articleData.categories);\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m196\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m240\u001b[0m:\u001b[93m84\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m240\u001b[0m     if (updateData.status !== undefined) data.status = updateData.status as Prisma.ArticleStatus;\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                                   ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m257\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m257\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m297\u001b[0m     return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m320\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m320\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as EditArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m356\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2694: \u001b[0mNamespace '\"C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/node_modules/.prisma/client/index\".Prisma' has no exported member 'ArticleStatus'.\r\n\r\n\u001b[7m356\u001b[0m       { status: status as Prisma.ArticleStatus },\r\n\u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m367\u001b[0m     return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m407\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m407\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m447\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m447\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m476\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m478\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m478\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m480\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m480\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m485\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m485\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m490\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m490\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m491\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m491\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m492\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m492\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m494\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m494\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m495\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m495\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m500\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m500\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m509\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m509\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m511\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m525\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m525\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m527\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m527\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m529\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m529\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'pageInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2695: \u001b[0mLeft side of comma operator is unused and has no side effects.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limitInput'.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'normalized'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'categoryName'.\r\n\r\n\u001b[7m533\u001b[0m     const normalized = categoryKey(categoryName);\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m538\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'where'.\r\n\r\n\u001b[7m538\u001b[0m     const where = {\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'total'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m543\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articlesRaw'.\r\n\r\n\u001b[7m543\u001b[0m     const [total, articlesRaw] = await Promise.all([\r\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m544\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m544\u001b[0m       this.repo.countPublished(where),\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m545\u001b[0m       this.repo.findPublished({\r\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m547\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18004: \u001b[0mNo value exists in scope for the shorthand property 'skip'. Either declare one or provide an initializer.\r\n\r\n\u001b[7m547\u001b[0m         skip,\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m548\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'limit'.\r\n\r\n\u001b[7m548\u001b[0m         take: limit,\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2451: \u001b[0mCannot redeclare block-scoped variable 'articles'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m553\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m553\u001b[0m     const articles = articlesRaw.map(a => this.mapArticleDbToDto(a as ArticleDb));\r\n\u001b[7m   \u001b[0m \u001b[91m                                          ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'async'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'getArticleBySlug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'string' only refers to a type, but is being used as a value here.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m562\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m562\u001b[0m     if (!slug) throw new NotFoundError('Invalid slug', 'INVALID_SLUG');\r\n\u001b[7m   \u001b[0m \u001b[91m         ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'slug'.\r\n\r\n\u001b[7m564\u001b[0m     const articleRaw = await this.repo.findBySlug(slug, DEFAULT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m571\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m571\u001b[0m     this.repo\r\n\u001b[7m   \u001b[0m \u001b[91m    ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m573\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'err' implicitly has an 'any' type.\r\n\r\n\u001b[7m573\u001b[0m       .catch((err) => logger.error('inc view failed', { err }));\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m575\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2532: \u001b[0mObject is possibly 'undefined'.\r\n\r\n\u001b[7m575\u001b[0m     return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m           ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m506\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m506\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m508\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m508\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m531\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m531\u001b[0m }(pageInput, limitInput);\r\n\u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m559\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\r\n\r\n\u001b[7m559\u001b[0m   }\r\n\u001b[7m   \u001b[0m \u001b[91m  ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m  ~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m561\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\r\n\r\n\u001b[7m561\u001b[0m   async getArticleBySlug(slug: string) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                       ~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:15:55.135Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 11:51:32 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2306]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2306: \u001b[0mFile 'C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/src/services/ArticleService.ts' is not a module.\r\n\r\n\u001b[7m2\u001b[0m import { ArticleService } from \"../services/ArticleService\";\r\n\u001b[7m \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2306: \u001b[0mFile 'C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/src/services/ArticleService.ts' is not a module.\r\n\r\n\u001b[7m2\u001b[0m import { ArticleService } from \"../services/ArticleService\";\r\n\u001b[7m \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":7334.109},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4897427,"external":7973833,"heapTotal":221458432,"heapUsed":198448824,"rss":273121280},"pid":1152,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/controllers/ArticleController.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2306: \u001b[0mFile 'C:/Users/kumar/OneDrive/Desktop/04-CODEBASE/meaupost18/backend/src/services/ArticleService.ts' is not a module.\r\n\r\n\u001b[7m2\u001b[0m import { ArticleService } from \"../services/ArticleService\";\r\n\u001b[7m \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:21:32.372Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 11:51:36 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":7338.515},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886735,"external":7975991,"heapTotal":225595392,"heapUsed":191383664,"rss":271572992},"pid":7644,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:21:36.786Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 11:51:41 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":7342.812},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886679,"external":7975935,"heapTotal":233721856,"heapUsed":202958840,"rss":279588864},"pid":16884,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:21:41.085Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 11:59:24 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":7805.89},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886647,"external":7975903,"heapTotal":224546816,"heapUsed":190892672,"rss":273936384},"pid":17200,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:29:24.156Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 11:59:35 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":7817.64},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886735,"external":7975991,"heapTotal":224808960,"heapUsed":191334568,"rss":274751488},"pid":14124,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m180\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m185\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m195\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m213\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m213\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m225\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m121\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m226\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m122\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m243\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m261\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m276\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m276\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m293\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m293\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m321\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m321\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m330\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m357\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m357\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m381\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m402\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m402\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m413\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m413\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m462\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m462\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m514\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m514\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m528\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m528\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m534\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m537\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m537\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:29:35.910Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 12:01:29 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2367,2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m115\u001b[0m             if (existingId && existing.id === existingId) {\r\n\u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m188\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m193\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m203\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m221\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m233\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m129\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m234\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m130\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m251\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m269\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m284\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m301\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m329\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m329\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m338\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m365\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m389\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m410\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m410\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m421\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m421\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m470\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m522\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m522\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m536\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m536\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m542\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m545\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m115\u001b[0m             if (existingId && existing.id === existingId) {\r\n\u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m188\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m193\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m203\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m221\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m233\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m129\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m234\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m130\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m251\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m269\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m284\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m301\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m329\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m329\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m338\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m365\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m389\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m410\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m410\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m421\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m421\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m470\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m522\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m522\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m536\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m536\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m542\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m545\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":7931.687},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886871,"external":7976127,"heapTotal":224546816,"heapUsed":191164336,"rss":277000192},"pid":7044,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m115\u001b[0m             if (existingId && existing.id === existingId) {\r\n\u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m188\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m193\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m203\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m221\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m233\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m129\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m234\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m130\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m251\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m269\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m284\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m301\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m329\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m329\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m338\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m365\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m389\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m410\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m410\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m421\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m421\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m470\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m522\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m522\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m536\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m536\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m542\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m545\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:31:29.952Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 12:03:51 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2367,2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m115\u001b[0m             if (existingId && existing.id === existingId) {\r\n\u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m188\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m193\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m203\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m221\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m233\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m129\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m234\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m130\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m251\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m269\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m284\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m301\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m329\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m329\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m338\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m365\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m389\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m410\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m410\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m421\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m421\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m470\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m522\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m522\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m536\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m536\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m542\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m545\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m115\u001b[0m             if (existingId && existing.id === existingId) {\r\n\u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m188\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m193\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m203\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m221\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m233\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m129\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m234\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m130\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m251\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m269\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m284\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m301\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m329\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m329\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m338\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m365\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m389\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m410\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m410\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m421\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m421\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m470\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m522\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m522\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m536\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m536\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m542\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m545\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":8073.593},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886759,"external":7976015,"heapTotal":224546816,"heapUsed":191412008,"rss":272359424},"pid":11012,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m115\u001b[0m             if (existingId && existing.id === existingId) {\r\n\u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m188\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m193\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m203\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m221\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m233\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m129\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m234\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m130\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m251\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m269\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m284\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m301\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m329\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m329\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m338\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m365\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m389\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m410\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m410\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m421\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m421\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m470\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m522\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m522\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m536\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m536\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m542\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m545\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:33:51.872Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 12:04:02 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2367,2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m115\u001b[0m             if (existingId && existing.id === existingId) {\r\n\u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m188\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m193\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m203\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m221\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m233\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m129\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m234\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m130\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m251\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m269\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m284\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m301\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m329\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m329\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m338\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m365\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m389\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m410\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m410\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m421\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m421\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m470\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m522\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m522\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m536\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m536\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m542\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m545\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m115\u001b[0m             if (existingId && existing.id === existingId) {\r\n\u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m188\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m193\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m203\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m221\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m233\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m129\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m234\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m130\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m251\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m269\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m284\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m301\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m329\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m329\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m338\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m365\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m389\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m410\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m410\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m421\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m421\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m470\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m522\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m522\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m536\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m536\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m542\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m545\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":8084.593},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886695,"external":7975951,"heapTotal":234246144,"heapUsed":203776992,"rss":286396416},"pid":11432,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m115\u001b[0m             if (existingId && existing.id === existingId) {\r\n\u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m188\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m193\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m203\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m221\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m233\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m129\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m234\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m130\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m251\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m269\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m284\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m301\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m329\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m329\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m338\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m365\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m389\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m410\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m410\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m421\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m421\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m470\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m522\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m522\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m536\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m536\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m542\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m545\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m545\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:34:02.871Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 12:04:58 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2345,2345,2352,2367,2322,2322,2367,2345,2352,2367,2367,2352,2352,2367,2322,2352,2352,2352,2367,2345,2352]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m190\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m190\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m195\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m205\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m223\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m235\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m235\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m131\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m131\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m236\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m132\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m253\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m253\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m271\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m286\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m286\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m303\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m303\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m331\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m331\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m340\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m340\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m367\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m391\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m391\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m412\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m412\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m423\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m423\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m472\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m472\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m524\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m524\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m538\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m538\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m544\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m544\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m547\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m547\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m190\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m190\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m195\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m205\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m223\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m235\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m235\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m131\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m131\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m236\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m132\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m253\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m253\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m271\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m286\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m286\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m303\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m303\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m331\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m331\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m340\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m340\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m367\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m391\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m391\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m412\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m412\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m423\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m423\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m472\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m472\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m524\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m524\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m538\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m538\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m544\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m544\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m547\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m547\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":8140.671},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4886727,"external":7975983,"heapTotal":225595392,"heapUsed":191179720,"rss":272572416},"pid":11156,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m190\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' is not assignable to parameter of type 'ArticleCreateInput'.\r\n  Property 'author' is missing in type '{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: \"DRAFT\" | \"PUBLISHED\" | \"ARCHIVED\" | \"PENDING_REVIEW\"; featured: boolean; isPremium: boolean; authorId: string; }' but required in type 'ArticleCreateInput'.\r\n\r\n\u001b[7m190\u001b[0m         const article = await this.repo.create(data, EDIT_SELECT);\r\n\u001b[7m   \u001b[0m \u001b[91m                                               ~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9182\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9182\u001b[0m     author: UserCreateNestedOneWithoutArticlesInput\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    'author' is declared here.\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m195\u001b[0m                 article.id,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m205\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m205\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m223\u001b[0m             existingArticle.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m235\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m235\u001b[0m                 title: updateData.title || existingArticle.title,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m131\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m131\u001b[0m         title?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\r\n    The expected type comes from property 'title' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string | ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ({ ...; } | { ...; })[] | ({ ...; } | { ...; })[]' is not assignable to type 'string | undefined'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m236\u001b[0m                 content: updateData.content || existingArticle.content,\r\n\u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~\u001b[0m\r\n\r\n  \u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m9\u001b[0m\r\n    \u001b[7m132\u001b[0m         content?: string;\r\n    \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~\u001b[0m\r\n    The expected type comes from property 'content' which is declared here on type '{ title?: string | undefined; content?: string | undefined; excerpt?: string | undefined; }'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m253\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types 'string' and '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' have no overlap.\r\n\r\n\u001b[7m253\u001b[0m         if (updateData.title && updateData.title !== existingArticle.title) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Partial<{ title: string; slug: string; content: string; excerpt: string | null; thumbnail: string | null; status: string; featured: boolean; isPremium: boolean; }>' is not assignable to parameter of type 'ArticleUpdateInput'.\r\n  Types of property 'status' are incompatible.\r\n    Type 'string | undefined' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n      Type 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m271\u001b[0m             data,\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m286\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m286\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m303\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m303\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m331\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m331\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m340\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m340\u001b[0m         return this.mapArticleDbToDto(article as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m367\u001b[0m             this.mapArticleDbToDto(a as EditArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m391\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m391\u001b[0m             article.authorId !== userId &&\r\n\u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m412\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'string' is not assignable to type 'ArticleStatus | EnumArticleStatusFieldUpdateOperationsInput | undefined'.\r\n\r\n\u001b[7m412\u001b[0m             { status },\r\n\u001b[7m   \u001b[0m \u001b[91m              ~~~~~~\u001b[0m\r\n\r\n  \u001b[96mnode_modules/.prisma/client/index.d.ts\u001b[0m:\u001b[93m9213\u001b[0m:\u001b[93m5\u001b[0m\r\n    \u001b[7m9213\u001b[0m     status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus\r\n    \u001b[7m    \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\r\n    The expected type comes from property 'status' which is declared here on type 'ArticleUpdateInput'\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m423\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; updatedAt: Date; title: string; slug: string; excerpt: string | null; content: string; status: ArticleStatus; thumbnail: string | null; ... 5 more ...; _count: { ...; }; }': id, createdAt, updatedAt, title, and 11 more.\r\n\r\n\u001b[7m423\u001b[0m         return this.mapArticleDbToDto(updatedArticle as EditArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m472\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m472\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m524\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m524\u001b[0m             this.mapArticleDbToDto(a as ArticleDb)\r\n\u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m538\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2367: \u001b[0mThis comparison appears to be unintentional because the types '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' and 'string' have no overlap.\r\n\r\n\u001b[7m538\u001b[0m         if (!articleRaw || articleRaw.status !== \"PUBLISHED\") {\r\n\u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m544\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[] | ... 4 more ... | { ...; }[]' is not assignable to parameter of type 'string'.\r\n  Type '({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { id: string; ... 7 more ...; articleId: string; })[]' is not assignable to type 'string'.\r\n\r\n\u001b[7m544\u001b[0m             .incrementViewCount(articleRaw.id)\r\n\u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/ArticleService.ts\u001b[0m:\u001b[93m547\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' to type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type '{ [x: string]: ({ id: string; createdAt: Date; updatedAt: Date; content: string; authorId: string; parentId: string | null; isApproved: boolean; isSpam: boolean; articleId: string; } | { ...; })[] | ... 4 more ... | { ...; }[]; [x: number]: never; [x: symbol]: never; }' is missing the following properties from type '{ id: string; createdAt: Date; title: string; slug: string; excerpt: string | null; thumbnail: string | null; viewCount: number; isPremium: boolean; author: { name: string; id: string; profileImage: string | null; }; articleCategories: ({ ...; } & { ...; })[]; _count: { ...; }; }': id, createdAt, title, slug, and 7 more.\r\n\r\n\u001b[7m547\u001b[0m         return this.mapArticleDbToDto(articleRaw as ArticleDb);\r\n\u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T06:34:58.946Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 12:46:43 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2304,2304,2304,2304,2304,2304,2304]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindPublishedOptions'.\r\n\r\n\u001b[7m63\u001b[0m     }: FindPublishedOptions) {\r\n\u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindManyOptions'.\r\n\r\n\u001b[7m79\u001b[0m     }: FindManyOptions) {\r\n\u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindCategoriesOptions'.\r\n\r\n\u001b[7m301\u001b[0m     }: FindCategoriesOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindByAuthorOptions'.\r\n\r\n\u001b[7m306\u001b[0m     async findByAuthor(authorId: string, options: FindByAuthorOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SearchOptions'.\r\n\r\n\u001b[7m330\u001b[0m     async search(query: string, options: SearchOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m355\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindByAuthorOptions'.\r\n\r\n\u001b[7m355\u001b[0m     async findFeatured(options: Omit<FindByAuthorOptions, \"status\"> = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m376\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindPopularOptions'.\r\n\r\n\u001b[7m376\u001b[0m     async findPopular(options: FindPopularOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindPublishedOptions'.\r\n\r\n\u001b[7m63\u001b[0m     }: FindPublishedOptions) {\r\n\u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindManyOptions'.\r\n\r\n\u001b[7m79\u001b[0m     }: FindManyOptions) {\r\n\u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindCategoriesOptions'.\r\n\r\n\u001b[7m301\u001b[0m     }: FindCategoriesOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindByAuthorOptions'.\r\n\r\n\u001b[7m306\u001b[0m     async findByAuthor(authorId: string, options: FindByAuthorOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SearchOptions'.\r\n\r\n\u001b[7m330\u001b[0m     async search(query: string, options: SearchOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m355\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindByAuthorOptions'.\r\n\r\n\u001b[7m355\u001b[0m     async findFeatured(options: Omit<FindByAuthorOptions, \"status\"> = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m376\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindPopularOptions'.\r\n\r\n\u001b[7m376\u001b[0m     async findPopular(options: FindPopularOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":10645.421},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4916856,"external":7993262,"heapTotal":227450880,"heapUsed":205716256,"rss":287047680},"pid":11808,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindPublishedOptions'.\r\n\r\n\u001b[7m63\u001b[0m     }: FindPublishedOptions) {\r\n\u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindManyOptions'.\r\n\r\n\u001b[7m79\u001b[0m     }: FindManyOptions) {\r\n\u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindCategoriesOptions'.\r\n\r\n\u001b[7m301\u001b[0m     }: FindCategoriesOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindByAuthorOptions'.\r\n\r\n\u001b[7m306\u001b[0m     async findByAuthor(authorId: string, options: FindByAuthorOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m330\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'SearchOptions'.\r\n\r\n\u001b[7m330\u001b[0m     async search(query: string, options: SearchOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m355\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindByAuthorOptions'.\r\n\r\n\u001b[7m355\u001b[0m     async findFeatured(options: Omit<FindByAuthorOptions, \"status\"> = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                                     ~~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/repositories/ArticleRepository.ts\u001b[0m:\u001b[93m376\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'FindPopularOptions'.\r\n\r\n\u001b[7m376\u001b[0m     async findPopular(options: FindPopularOptions = {}) {\r\n\u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T07:16:43.693Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
{"date":"Sat Sep 27 2025 12:48:46 GMT+0530 (India Standard Time)","environment":"development","error":{"diagnosticCodes":[2304,2304]},"exception":true,"level":"error","message":"uncaughtException: тип Unable to compile TypeScript:\n\u001b[96msrc/services/AuthService.ts\u001b[0m:\u001b[93m28\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'RegisterData'.\r\n\r\n\u001b[7m28\u001b[0m     async register(data: RegisterData) {\r\n\u001b[7m  \u001b[0m \u001b[91m                         ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/AuthService.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'LoginData'.\r\n\r\n\u001b[7m83\u001b[0m     async login(data: LoginData) {\r\n\u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~\u001b[0m\r\n\nTSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/AuthService.ts\u001b[0m:\u001b[93m28\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'RegisterData'.\r\n\r\n\u001b[7m28\u001b[0m     async register(data: RegisterData) {\r\n\u001b[7m  \u001b[0m \u001b[91m                         ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/AuthService.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'LoginData'.\r\n\r\n\u001b[7m83\u001b[0m     async login(data: LoginData) {\r\n\u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","os":{"loadavg":[0,0,0],"uptime":10768.203},"process":{"argv":["C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\dist\\bin.js","C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\src\\server.ts"],"cwd":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":4908613,"external":7985019,"heapTotal":234815488,"heapUsed":210485328,"rss":292839424},"pid":16896,"uid":null,"version":"v22.14.0"},"service":"news-platform-api","stack":"TSError: тип Unable to compile TypeScript:\n\u001b[96msrc/services/AuthService.ts\u001b[0m:\u001b[93m28\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'RegisterData'.\r\n\r\n\u001b[7m28\u001b[0m     async register(data: RegisterData) {\r\n\u001b[7m  \u001b[0m \u001b[91m                         ~~~~~~~~~~~~\u001b[0m\r\n\u001b[96msrc/services/AuthService.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'LoginData'.\r\n\r\n\u001b[7m83\u001b[0m     async login(data: LoginData) {\r\n\u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~\u001b[0m\r\n\n    at createTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:859:12)\n    at reportTSError (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:863:19)\n    at getOutput (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1077:36)\n    at Object.compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1433:41)\n    at Module.m._compile (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1617:30)\n    at node:internal/modules/cjs/loader:1706:10\n    at Object.require.extensions.<computed> [as .ts] (C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts:1621:12)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n    at Function._load (node:internal/modules/cjs/loader:1108:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)","timestamp":"2025-09-27T07:18:46.472Z","trace":[{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"createTSError","line":859,"method":null,"native":false},{"column":19,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"reportTSError","line":863,"method":null,"native":false},{"column":36,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"getOutput","line":1077,"method":null,"native":false},{"column":41,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.compile","line":1433,"method":"compile","native":false},{"column":30,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Module.m._compile","line":1617,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":null,"line":1706,"method":null,"native":false},{"column":12,"file":"C:\\Users\\kumar\\OneDrive\\Desktop\\04-CODEBASE\\meaupost18\\backend\\node_modules\\ts-node\\src\\index.ts","function":"Object.require.extensions.<computed> [as .ts]","line":1621,"method":"ts]","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1289,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1108,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false}]}
